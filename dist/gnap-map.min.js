!function(){"use strict";angular.module("gnapMap",["gnap","ui.select"])}(),function(){"use strict";function a(){function a(a){function c(){return b?b:(a.log("No layers were configured. Use the 'setDataLayers' function at config time, or to expand it at run time."),{})}return{setDataLayers:function(a){b=angular.merge(b||{},a)},getDataLayers:c}}var b;this.setDataLayers=function(a){b=a},this.$get=a,a.$inject=["$log"]}angular.module("gnapMap").provider("layerConfig",a)}(),function(){"use strict";function a(a,b){function c(c,d,e,f){function g(){k.layer.displayLayer&&(b.fetchDataInBounds(k.layer,{refresh:"true"===c.layerRefresh||c.layerRefresh===!0,append:"true"===c.layerAppend||c.layerAppend===!0}),c.linkedLayers&&angular.forEach(c.linkedLayers.split(","),function(a){b.fetchDataInBounds(b.dataLayers[a],{refresh:"true"===c.linkedLayersRefresh||c.linkedLayersRefresh===!0,append:"true"===c.linkedLayersAppend||c.linkedLayersAppend===!0})}))}function h(){i(),k.layer.displayLayer?(g(),l=a(g,c.interval||5e3)):b.fetchDataInBounds(k.layer)}function i(){l&&(a.cancel(l),l=null)}function j(){return!c.alwaysEnabled&&b.mapView.viewPort.getZoomLevel()<k.layer.minZoomLevel}var k=c.vm={};k.layer=b.dataLayers[c.layer],k.muteDisplayOption=j;var l;c.$watch(function(){return c.interval},function(a,b){a!==b&&h()}),c.$watch(function(){return k.layer.displayLayer},function(){h()}),d.on("$destroy",function(){i()})}var d=b.config.translationLocationBase;return{restrict:"AE",link:c,scope:{layer:"@",layerRefresh:"=?",layerAppend:"=?",linkedLayers:"@",linkedLayersRefresh:"=?",linkedLayersAppend:"=?",interval:"=?",alwaysEnabled:"=?",hideIcon:"=?",hideLabel:"=?"},template:'<div ng-class="{ \'translucent\': vm.muteDisplayOption() }" class="layer-switch">    <label ng-if="vm.layer.iconUrl && !hideIcon" for="{{vm.layer.itemType}}"><img style="width: 20px" ng-src="{{vm.layer.iconUrl}}" /></label>    <input class="ace ace-switch ace-switch-3" type="checkbox" id="{{vm.layer.itemType}}" ng-model="vm.layer.displayLayer">    <span class="lbl"></span>    <label ng-hide="hideLabel" ng-class="{ \'text-muted\': vm.muteDisplayOption() }" for="{{vm.layer.itemType}}">        {{(vm.layer.translationId || \''+d+"' + vm.layer.itemType + 's') | translate}}    </label></div>"}}angular.module("gnapMap").directive("layerSwitchAutoRefresh",a),a.$inject=["$interval","mapManager"]}(),function(){"use strict";function a(a){function b(b,c,d,e){function f(){a.fetchDataInBounds(b.layer),d.linkedLayers&&angular.forEach(d.linkedLayers.split(","),function(b){a.fetchDataInBounds(a.dataLayers[b])})}function g(){return!b.alwaysEnabled&&a.mapView.viewPort.getZoomLevel()<h.layer.minZoomLevel}var h=b.vm={};h.layer=a.dataLayers[b.layer],h.fetchLayerDataInBounds=f,h.muteDisplayOption=g}var c=a.config.translationLocationBase;return{restrict:"AE",link:b,scope:{layer:"@",linkedLayers:"@",alwaysEnabled:"=?",hideIcon:"=?",hideLabel:"=?"},template:'<span ng-class="{ \'translucent\': vm.muteDisplayOption() }" class="layer-switch">    <label ng-if="vm.layer.iconUrl && !hideIcon" for="{{vm.layer.itemType}}"><img style="width: 20px" ng-src="{{vm.layer.iconUrl}}" /></label>    <input class="ace ace-switch ace-switch-3" type="checkbox" id="{{vm.layer.itemType}}" ng-model="vm.layer.displayLayer" ng-change=\'vm.fetchLayerDataInBounds()\'>    <span class="lbl"></span>    <label ng-hide="hideLabel" ng-class="{ \'text-muted\': vm.muteDisplayOption() }" for="{{vm.layer.itemType}}">        {{(vm.layer.translationId || \''+c+"' + vm.layer.itemType + 's') | translate}}    </label></span>"}}angular.module("gnapMap").directive("layerSwitch",a),a.$inject=["mapManager"]}(),function(){"use strict";function a(){function a(a,c){function d(d,e){var h=b+f(d),i=angular.extend({},g(d),e);return c.isDefaultCoordinateSystem()||(i.result=c.getCoordinateSystem()),a.get(h,{params:i})}function e(d){var e=b+f(d,!0),g={};return c.isDefaultCoordinateSystem()||(g.result=c.getCoordinateSystem()),a.get(e,{params:g})}var f=function(a,b){return a.resourceUri+(b?"/all":"")},g=function(a){return{}};return{setConstructResourceUriFunction:function(a){f=a},setConstructParamsFunction:function(a){g=a},getInBounds:d,getAll:e}}var b="http://localhost/";this.setEndpointUri=function(a){b=a},this.$get=a,a.$inject=["$http","mapTech"]}angular.module("gnapMap").provider("mapGeoData",a)}(),function(){"use strict";function a(){function a(a,e,f,g,h,i,j){function k(a){K.viewPort.getBounds()&&angular.forEach(D,function(b){r(b,a)})}function l(){angular.forEach(D,function(a){w(a)})}function m(){g.is(c)&&g.go(b)}function n(a,d){g.is(c)?g.go(b).then(function(){z(a,d)}):z(a,d)}function o(b,c){a.$emit("custom-shape-created",b,c)}function p(b){a.$emit("items-selected",b)}function q(a,b){G.type=a,G.id=b}function r(a,b,c){var d=b===!0,e=!1,f=c;if(null!==b&&"object"==typeof b&&(d=b.refresh,e=b.append,f=b.callback),K.viewPort.getBounds()){"string"==typeof a&&(a=D[a]),"undefined"==typeof a.shouldShowFunction&&(a.shouldShowFunction=v);var g=a.shouldShowFunction(a,K.viewPort.getZoomLevel(),D);if(g&&!d||w(a),g&&(!x(a)||a.getLabelStyleFunction||e||a.moving)){H.featuresLoading++;try{var h=a.cache&&!I.skipCache?t:s;h(a,d)["finally"](function(){H.featuresLoading--,"function"==typeof f&&f()})}catch(i){H.featuresLoading--}}}}function s(a,b){return i.getInBounds(a,K.viewPort.getBoundsWgs84()).then(function(c){var d=K.viewPort.getZoomLevel();a.shouldShowFunction(a,d,D)&&(y(c.data,b),a._zoom=d)})}function t(a,b){return"undefined"==typeof a._cache?i.getAll(a).then(function(c){a._cache=c.data;var d=K.viewPort.getZoomLevel();a.shouldShowFunction(a,d,D)&&(u(a._cache,a.itemType,b),a._zoom=d)}):e(function(){u(a._cache,a.itemType,b)})}function u(a,b,c){var d={type:"FeatureCollection",features:[]},e=K.viewPort.getBounds(.5);angular.forEach(a.features,function(a){if(!a.geometry||!a.geometry.coordinates)throw new Error("Feature to add does not have 'geometry' or 'geometry.coordinates'");K.viewPort.containsCoordinate(a.geometry.coordinates,e)&&d.features.push(a)}),y(d,c)}function v(a,b,c){return a.displayLayer&&b>=a.minZoomLevel&&("undefined"==typeof a.maxZoomLevel||null===a.maxZoomLevel||b<=a.maxZoomLevel)}function w(a){K._removeGeoJsonData(a.itemType),a._fetchedItems=[]}function x(a){if(a.alwaysRefresh||a.refreshOnZoomChange&&a._zoom!==K.viewPort.getZoomLevel())return w(a),!1;a.hasOwnProperty("_fetchedItems")||(a._fetchedItems=[]);var b=!1;return a._fetchedItems.forEach(function(a){K.viewPort.isInBounds(a)&&(b=!0)}),!!b||(a._fetchedItems.push(K.viewPort.getBounds()),!1)}function y(a,b){e(function(){H.featuresAdding++}).then(function(){e(function(){try{if(null===a.features||void 0===a.features)return;var c=null==a?0:a.features.length;if(c>0){var d=a.features[0].properties.type;K._addGeoJsonData(a,d,b),G&&G.type&&G.type===d&&G.id&&angular.forEach(geoJsonData.features,function(a){a.id&&a.type&&a.id===G.type.charAt(0).toUpperCase()+G.type.slice(1)+"_"+G.id&&K.trackFeature(a)}),f.log("Added "+c+" "+d+"s.")}}finally{H.featuresAdding--}})})}function z(a,b){var d=D[a];if(d&&!d.hasNoDetails){if(b!==parseInt(b,10)){var e=b.indexOf("_");e>-1&&(b=parseInt(b.substr(e+1)))}var f={type:a,id:b};g.go(c,f)}}function A(a){E=a}function B(){return E}function C(){g.is(c)&&n(h.type,h.id)}var D=j.getDataLayers(),E={},F={type:null,position:null,details:null},G={type:null,id:null},H={featuresLoading:0,featuresAdding:0},I={skipCache:!1},J=function(){f.log("No implementation for this action was set by the selected map view!")},K={_addGeoJsonData:J,_removeGeoJsonData:J,addCustomKml:J,removeCustomKml:J,showInfoWindow:J,closeInfoWindow:J,resizeMap:J,activateDrawingMode:J,getGeoJson:J,viewPort:{getZoomLevel:J,setZoomLevel:J,getCenter:J,getCenterWgs84:J,setCenter:J,setCenterWgs84:J,getBounds:J,getBoundsWgs84:J,setBounds:J,setBoundsWgs84:J,containsBounds:J,containsCoordinate:J}};return a.$on("refreshDetailData",C),{dataLayers:D,selection:F,loadingStatus:H,fetchDataInBounds:r,fetchAllDataInBounds:k,clearData:w,clearAllData:l,mapFunctionIsSupported:function(a){return a!==J},mapView:K,events:{onInfoWindowClosed:m,onDataItemClicked:n,onCustomShapeCreated:o,onMultipleItemsSelected:p},setMap:A,getMap:B,settings:I,config:{mapState:b,mapInfoState:c,translationLocationBase:d},trackFeature:q}}var b="main.map",c="main.map.info",d="main.common.";this.setMapState=function(a){b=a},this.setMapInfoState=function(a){c=a},this.setTranslationLocationBase=function(a){d=a},this.$get=a,a.$inject=["$rootScope","$timeout","$log","$state","$stateParams","mapGeoData","layerConfig"]}angular.module("gnapMap").provider("mapManager",a)}(),function(){"use strict";function a(a){function b(b){b.mapTechList=a.getAllMapTech(),b.mapTech=a.getSelectedMapTech(),b.setMapTech=function(b){a.setSelectedMapTechKey(b)}}return{restrict:"A",scope:{},link:b,template:'<a data-toggle="dropdown" class="dropdown-toggle">\n    <span>\n        {{mapTech.displayName}}\n    </span>\n    <i class="icon-caret-down"></i>\n</a>\n\n<ul class="user-menu pull-right dropdown-menu dropdown-default dropdown-caret dropdown-close">\n    <li ng-repeat="mapTech in mapTechList">\n        <a ng-click="setMapTech(mapTech.key)">\n            {{mapTech.displayName}}\n        </a>\n    </li>\n</ul>\n'}}angular.module("gnapMap").directive("mapTechSelector",a),a.$inject=["mapTech"]}(),function(){"use strict";function a(){function a(a){c(d)&&(e=a.key),d[a.key]=a}function b(a,b,f,g){function h(){return c(d)&&b.log("No map technology modules were registered. Install and reference a module (e.g. gnap-map-google)."),d}function i(a){return a?(d[a]||b.log("Map technology '"+a+"' was not registered. Install and reference the module (gnap-map-"+a+")."),d[a]):i(j())}function j(){return o||f.get("map-tech")||e}function k(b){o=b,f.set("map-tech",b),a.location.reload()}function l(a){return j()===a}function m(){var a=i();return a?a.coordinateSystem:g}function n(){return m()===g}var o=null;return{getAllMapTech:h,getMapTech:i,getSelectedMapTech:i,getSelectedMapTechKey:j,setSelectedMapTechKey:k,is:l,isDefaultCoordinateSystem:n,getCoordinateSystem:m}}function c(a){for(var b in a)if(a.hasOwnProperty(b))return!1;return!0}var d={},e=null;this.registerMapTech=a,this.$get=b,b.$inject=["$window","$log","localStorageService","defaultCoordinateSystem"]}angular.module("gnapMap").constant("defaultCoordinateSystem","wgs84").provider("mapTech",a)}(),function(){"use strict";function a(a){return d(a,[].slice.call(arguments,1),!0)}function b(a){return"[object RegExp]"===Object.prototype.toString.call(a)}function c(a){return!(!a||!(a.nodeName||a.prop&&a.attr&&a.find))}function d(a,b,c){for(var f=a.$$hashKey,g=0,h=b.length;g<h;++g){var i=b[g];if(angular.isObject(i)||angular.isFunction(i))for(var j=Object.keys(i),k=0,l=j.length;k<l;k++){var m=j[k],n=i[m];c&&angular.isObject(n)?angular.isDate(n)?a[m]=new Date(n.valueOf()):angular.isRegExp(n)?a[m]=new RegExp(n):n.nodeName?a[m]=n.cloneNode(!0):angular.isElement(n)?a[m]=n.clone():(angular.isObject(a[m])||(a[m]=angular.isArray(n)?[]:{}),d(a[m],[n],!0)):a[m]=n}}return e(a,f),a}function e(a,b){b?a.$$hashKey=b:delete a.$$hashKey}angular.merge||(angular.merge=a),angular.isRegExp||(angular.isRegExp=b),angular.isElement||(angular.isElement=c)}();